version: '3.8'

services:
  postgres:
    image: timescale/timescaledb:latest-pg16
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - ./schema_wind.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "mydb"]
      interval: 5s
      retries: 5
      start_period: 5s
    networks:
    - mynetwork

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana_wind.json:/etc/grafana/provisioning/dashboards/grafana_wind.json
      - ./grafana-datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana-dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
    networks:
    - mynetwork

  python-job:
    build: ./python-job
    container_name: python-job
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/mydb
    networks:
    - mynetwork
    restart: always

  jupyterlab:
    build: ./jupyter
    container_name: jupyterlab
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/mydb
    ports:
      - "8888:8888"
    volumes:
      - ./jupyter:/workspace/
    networks:
    - mynetwork

networks:
  mynetwork: